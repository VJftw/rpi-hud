#!/bin/sh

# Wait for the TV-screen to be turned on...
while ! $( tvservice --dumpedid /tmp/edid | fgrep -qv 'Nothing written!' ); do
	bHadToWaitForScreen=true;
	printf "===> Screen is not connected, off or in an unknown mode, waiting for it to become available...\n"
	sleep 10;
done;

printf "===> Screen is on, extracting preferred mode...\n"
_DEPTH=32;
eval $( edidparser /tmp/edid | fgrep 'preferred mode' | tail -1 | sed -Ene 's/^.+(DMT|CEA) \(([0-9]+)\) ([0-9]+)x([0-9]+)[pi]? @.+/_GROUP=\1;_MODE=\2;_XRES=\3;_YRES=\4;/p' );

printf "===> Resetting screen to preferred mode: %s-%d (%dx%dx%d)...\n" $_GROUP $_MODE $_XRES $_YRES $_DEPTH
tvservice --explicit="$_GROUP $_MODE"
sleep 1;

printf "===> Resetting frame-buffer to %dx%dx%d...\n" $_XRES $_YRES $_DEPTH
fbset --all --geometry $_XRES $_YRES $_XRES $_YRES $_DEPTH -left 0 -right 0 -upper 0 -lower 0;
sleep 1;

echo ""
echo "===> Stopping and Removing Docker containers"
echo ""
docker stop $(docker ps -a -q)
docker rm $(docker ps -a -q)
echo ""
echo "===> Cleaning up extra images"
echo ""
docker rm -v $(docker ps -a -q -f status=exited)
docker rmi $(docker images -f "dangling=true" -q)

## Pull and Run smart-mirror orchestrate container
docker pull vjftw/smart-mirror
docker run -d -v /var/run/docker.sock:/var/run/docker.sock -v /smart-mirror:/smart-mirror -p 8081:8081 vjftw/smart-mirror

# Wait for ready
curl -O https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
chmod +x wait-for-it.sh
echo ""
./wait-for-it.sh -t 300 0.0.0.0:80 -- echo "=> Frontend is up"
./wait-for-it.sh -t 300 0.0.0.0:8080 -- echo "=> API is up"
./wait-for-it.sh -t 300 0.0.0.0:8081 -- echo "=> Ochestrate is up"

if [ -f /boot/xinitrc ]; then
	ln -fs /boot/xinitrc /home/pi/.xinitrc;
	su - pi -c 'startx' &
fi

exit 0;
